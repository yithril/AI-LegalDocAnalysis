"""Initial tables for gazdecki_consortium

Revision ID: b62f292dfb50
Revises: 
Create Date: 2025-07-25 22:17:29.810013

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b62f292dfb50'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('documents',
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_file_path', sa.String(length=500), nullable=False),
    sa.Column('status', sa.Enum('UPLOADED', 'TEXT_EXTRACTION_PENDING', 'TEXT_EXTRACTION_RUNNING', 'TEXT_EXTRACTION_SUCCEEDED', 'TEXT_EXTRACTION_FAILED', 'DOCUMENT_TYPE_IDENTIFICATION_PENDING', 'DOCUMENT_TYPE_IDENTIFICATION_RUNNING', 'DOCUMENT_TYPE_IDENTIFICATION_SUCCEEDED', 'DOCUMENT_TYPE_IDENTIFICATION_FAILED', 'CHUNKING_PENDING', 'CHUNKING_RUNNING', 'CHUNKING_SUCCEEDED', 'CHUNKING_FAILED', 'SUMMARIZATION_PENDING', 'SUMMARIZATION_RUNNING', 'SUMMARIZATION_SUCCEEDED', 'SUMMARIZATION_FAILED', 'HUMAN_REVIEW_PENDING', 'HUMAN_REVIEW_APPROVED', 'HUMAN_REVIEW_REJECTED', 'VECTORIZATION_PENDING', 'VECTORIZATION_RUNNING', 'VECTORIZATION_SUCCEEDED', 'VECTORIZATION_FAILED', 'ACTOR_EXTRACTION_PENDING', 'ACTOR_EXTRACTION_RUNNING', 'ACTOR_EXTRACTION_SUCCEEDED', 'ACTOR_EXTRACTION_FAILED', 'TIMELINE_EXTRACTION_PENDING', 'TIMELINE_EXTRACTION_RUNNING', 'TIMELINE_EXTRACTION_SUCCEEDED', 'TIMELINE_EXTRACTION_FAILED', 'LEGAL_ANALYSIS_PENDING', 'LEGAL_ANALYSIS_RUNNING', 'LEGAL_ANALYSIS_SUCCEEDED', 'LEGAL_ANALYSIS_FAILED', 'COMPLETED', 'FAILED', name='documentstatus'), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_documents_project_status', 'documents', ['project_id', 'status'], unique=False)
    op.create_index('idx_documents_tenant_status', 'documents', ['tenant_id', 'status'], unique=False)
    op.create_index(op.f('ix_documents_filename'), 'documents', ['filename'], unique=False)
    op.create_index(op.f('ix_documents_project_id'), 'documents', ['project_id'], unique=False)
    op.create_index(op.f('ix_documents_status'), 'documents', ['status'], unique=False)
    op.create_index(op.f('ix_documents_tenant_id'), 'documents', ['tenant_id'], unique=False)
    op.create_table('projects',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('document_start_date', sa.Date(), nullable=False),
    sa.Column('document_end_date', sa.Date(), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_document_end_date'), 'projects', ['document_end_date'], unique=False)
    op.create_index(op.f('ix_projects_document_start_date'), 'projects', ['document_start_date'], unique=False)
    op.create_index('ix_projects_tenant_date_range', 'projects', ['tenant_id', 'document_start_date', 'document_end_date'], unique=False)
    op.create_index(op.f('ix_projects_tenant_id'), 'projects', ['tenant_id'], unique=False)
    op.create_index('ix_projects_tenant_name', 'projects', ['tenant_id', 'name'], unique=True)
    op.create_table('tenants',
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('database_url', sa.String(length=500), nullable=True),
    sa.Column('pinecone_index', sa.String(length=100), nullable=True),
    sa.Column('pinecone_region', sa.String(length=100), nullable=True),
    sa.Column('blob_storage_connection', sa.String(length=500), nullable=True),
    sa.Column('tenant_metadata', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tenants_slug'), 'tenants', ['slug'], unique=True)
    op.create_table('user_groups',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_groups_tenant_id'), 'user_groups', ['tenant_id'], unique=False)
    op.create_index('ix_user_groups_tenant_name', 'user_groups', ['tenant_id', 'name'], unique=True)
    op.create_table('users',
    sa.Column('auth0_user_id', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('tenant_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_auth0_user_id'), 'users', ['auth0_user_id'], unique=True)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index('ix_users_tenant_email', 'users', ['tenant_id', 'email'], unique=True)
    op.create_index(op.f('ix_users_tenant_id'), 'users', ['tenant_id'], unique=False)
    op.create_table('project_user_groups',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('user_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_group_id'], ['user_groups.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'user_group_id')
    )
    op.create_table('user_user_groups',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_group_id'], ['user_groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'user_group_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_user_groups')
    op.drop_table('project_user_groups')
    op.drop_index(op.f('ix_users_tenant_id'), table_name='users')
    op.drop_index('ix_users_tenant_email', table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_auth0_user_id'), table_name='users')
    op.drop_table('users')
    op.drop_index('ix_user_groups_tenant_name', table_name='user_groups')
    op.drop_index(op.f('ix_user_groups_tenant_id'), table_name='user_groups')
    op.drop_table('user_groups')
    op.drop_index(op.f('ix_tenants_slug'), table_name='tenants')
    op.drop_table('tenants')
    op.drop_index('ix_projects_tenant_name', table_name='projects')
    op.drop_index(op.f('ix_projects_tenant_id'), table_name='projects')
    op.drop_index('ix_projects_tenant_date_range', table_name='projects')
    op.drop_index(op.f('ix_projects_document_start_date'), table_name='projects')
    op.drop_index(op.f('ix_projects_document_end_date'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_documents_tenant_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_status'), table_name='documents')
    op.drop_index(op.f('ix_documents_project_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_filename'), table_name='documents')
    op.drop_index('idx_documents_tenant_status', table_name='documents')
    op.drop_index('idx_documents_project_status', table_name='documents')
    op.drop_table('documents')
    # ### end Alembic commands ###
